name: Chromatic Deployment

on:
  workflow_call:
    inputs:
      env:
        type: string
        required: true
jobs:
  deploy-chromatic:
    environment: ${{ inputs.env }}
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: yarn
      - name: Set Chromatic Project Token
        id: set-chromatic-token
        run: |
          if [ "${{ inputs.env }}" == "dev" ]; then
            chromatic_project_token=${{ secrets.CHROMATIC_PROJECT_TOKEN_DEV }}
            echo "::add-mask::$chromatic_project_token"
            echo "CHROMATIC_PROJECT_TOKEN=$chromatic_project_token" >> "$GITHUB_OUPUT"
          elif [ "${{ inputs.env }}" == "main" ]; then
            chromatic_project_token=${{ secrets.CHROMATIC_PROJECT_TOKEN }}
            echo "::add-mask::$chromatic_project_token"
            echo "CHROMATIC_PROJECT_TOKEN=$chromatic_project_token" >> "$GITHUB_OUPUT"
          else
            echo "Error: Invalid environment"
            exit 1
          fi
      - name: Run Chromatic
        uses: chromaui/action@latest
        id: chromatic
        with:
          projectToken: ${{ steps.set-chromatic-token.outputs.CHROMATIC_PROJECT_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: comment PR
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const issues = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`
            })

            const prNumber = context.issue.number || issues.data[0].number

            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€storybook: ${{ steps.chromatic.outputs.storybookUrl }}'
            })
